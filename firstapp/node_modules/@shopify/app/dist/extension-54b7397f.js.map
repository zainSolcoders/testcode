{"version":3,"file":"extension-54b7397f.js","sources":["../src/cli/services/build/extension.ts"],"sourcesContent":["import {runGoExtensionsCLI} from '../../utilities/extensions/cli'\nimport {App, UIExtension} from '../../models/app/app'\nimport {extensionConfig} from '../../utilities/extensions/configuration'\nimport {error, yaml} from '@shopify/cli-kit'\nimport {Writable} from 'node:stream'\n\nexport interface ExtensionBuildOptions {\n  /**\n   * Standard output stream to send the output through.\n   */\n  stdout: Writable\n  /**\n   * Standard error stream to send the error output through.\n   */\n  stderr: Writable\n\n  /**\n   * Signal to abort the build process.\n   */\n  signal: error.AbortSignal\n\n  /**\n   * Overrides the default build directory.\n   */\n  buildDirectory?: string\n\n  /**\n   * The extension to be built.\n   */\n  extensions: UIExtension[]\n\n  /**\n   * The app that contains the extension.\n   */\n  app: App\n}\n\n/**\n * It builds an extension.\n * @param extension {UIExtension} The extension to build.\n * @param options {ExtensionBuildOptions} Build options.\n */\nexport async function buildExtension(options: ExtensionBuildOptions): Promise<void> {\n  options.stdout.write(`Building extension...`)\n  const stdin = yaml.encode(await extensionConfig(options))\n  await runGoExtensionsCLI(['build', '-'], {\n    cwd: options.app.directory,\n    stdout: options.stdout,\n    stderr: options.stderr,\n    stdin,\n  })\n}\n"],"names":[],"mappings":";;;;AA0CA,eAAA,cAAA,CAAqC,OAA+C,EAAA;AAClF,EAAQ,OAAA,CAAA,MAAA,CAAO,MAAM,CAAuB,qBAAA,CAAA,CAAA,CAAA;AAC5C,EAAA,MAAM,QAAQ,IAAK,CAAA,MAAA,CAAO,MAAM,eAAA,CAAgB,OAAO,CAAC,CAAA,CAAA;AACxD,EAAA,MAAM,kBAAmB,CAAA,CAAC,OAAS,EAAA,GAAG,CAAG,EAAA;AAAA,IACvC,GAAA,EAAK,QAAQ,GAAI,CAAA,SAAA;AAAA,IACjB,QAAQ,OAAQ,CAAA,MAAA;AAAA,IAChB,QAAQ,OAAQ,CAAA,MAAA;AAAA,IAChB,KAAA;AAAA,GACD,CAAA,CAAA;AACH;;;;"}